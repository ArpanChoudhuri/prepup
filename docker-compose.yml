version: "3.8"
services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "${SA_PASSWORD:-YourStrong!Passw0rd}"
      ACCEPT_EULA: "Y"
    expose:
      - "1433"
    healthcheck:
      # simple TCP probe to avoid dependency on sqlcmd being present;
      # use a longer start_period so SQL Server can finish initialization
      test: ["CMD-SHELL", "bash -c '>/dev/tcp/localhost/1433' || exit 1"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - mssqldata:/var/opt/mssql

  api:
    build:
      context: .
      dockerfile: Api/Dockerfile
    image: prepup-api
    ports:
      - "8080:8080"
    depends_on:
      mssql:
        condition: service_healthy
    environment:
      ConnectionStrings__AppDb: "Server=mssql,1433;Database=PrepUpDb;User Id=sa;Password=${SA_PASSWORD:-YourStrong!Passw0rd};TrustServerCertificate=True;MultipleActiveResultSets=true"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/healthz || exit 1"]
      start_period: 15s
      interval: 10s
      timeout: 3s
      retries: 8

  nginx:
    build:
      context: .
      dockerfile: web/Dockerfile
    image: prepup-web
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      # uses wget inside the nginx web image; web/Dockerfile installs wget
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/healthz || exit 1"]
      start_period: 5s
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  mssqldata: